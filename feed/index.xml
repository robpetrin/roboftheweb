<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Rob, of the Web</title>
	<atom:link href="/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Fri, 29 Jul 2022 21:03:33 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.1</generator>

<image>
	<url>/wp-content/uploads/2022/06/favicon-150x150.png</url>
	<title>Rob, of the Web</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>The Best Front-End Web Development Tools</title>
		<link>/front-end-web-development-tools/</link>
					<comments>/front-end-web-development-tools/#respond</comments>
		
		<dc:creator><![CDATA[Rob Petrin]]></dc:creator>
		<pubDate>Thu, 07 Jul 2022 20:39:50 +0000</pubDate>
				<category><![CDATA[Blog Posts]]></category>
		<guid isPermaLink="false">/?p=119</guid>

					<description><![CDATA[<p>For new and experienced web developers, assessing tools and resources is a critical part of your practice. This includes web references, web tools, code editors, CMS software, and more. In this article, we&#8217;re going to assess seven distinct tools, and why you should select them over their chief competitors. None of the applications below are [&#8230;]</p>
<p>The post <a rel="nofollow" href="/front-end-web-development-tools/">The Best Front-End Web Development Tools</a> appeared first on <a rel="nofollow" href="/">Rob, of the Web</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>For new and experienced web developers, assessing tools and resources is a critical part of your practice. This includes web references, web tools, code editors, CMS software, and more. In this article, we&#8217;re going to assess seven distinct tools, and why you should select them over their chief competitors.</p>



<p>None of the applications below are sponsoring this post, or my recommendation of them. Feel free to do your own research &#8212; <strong>Googling is a developer&#8217;s best friend!</strong></p>



<h2>Instant Prototyping: <strong><a href="https://codepen.io/" data-type="URL" data-id="https://codepen.io/" target="_blank" rel="noreferrer noopener">CodePen</a></strong></h2>



<p><strong>Price: </strong>Free (with a Pro tier)</p>



<p>I use CodePen almost daily when creating small prototypes, one-off WordPress components, or mini-projects to showcase. It includes editor panes for HTML, CSS, and JavaScript, and supports processors and supersets of each language. It&#8217;s an excellent sandbox to try out code, fork someone else&#8217;s Pen, or to experiment with external libraries and frameworks.</p>



<p>For free, you get unlimited public pens and unlimited templates. For Pro ($8/mo), you get asset hosting (file storage), project support, collaboration and debug mode, private pens, ad removal, and live view.</p>



<p><strong>Chief Competitor: </strong><a href="https://jsfiddle.net/" target="_blank" rel="noreferrer noopener">JSFiddle</a>. While CodePen is more intended for front-end mockups, JSFiddle is used primarily for JavaScript experimenting. You have to hit &#8220;Run&#8221; to see your updates, whereas this is instantaneous on CodePen. So, depending upon your use-case, JSFiddle might be a better or worse fit. For front-end purposes, typically CodePen is a sleeker editing experience.</p>



<h2>Code Editing: <strong><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer noopener">VSCode</a></strong></h2>



<p><strong>Price: </strong>Free (open-source)</p>



<p>Visual Code Studio is my pick for two main reasons &#8212; it&#8217;s the most popular, and because of it&#8217;s extension ecosystem. Keep those factors in mind when I get to CMSes later in this article.</p>



<p>Your IDE (integrated development environment) is the most important tool you&#8217;ll use when writing code, for obvious reasons. It needs to be crafted to your workflow &#8212; colors, plugins, presets, keyboard shortcuts, etc. &#8212; to ensure you continue to work quickly and productively. VSCode is highly configurable, and widely adopted.</p>



<p><strong>Chief Competitor: </strong><a rel="noreferrer noopener" href="https://atom.io/" data-type="URL" data-id="https://atom.io/" target="_blank">Atom</a>. There&#8217;s a lot to like with Atom, which is based on Electron (Node.JS). It&#8217;s been plagued by performance issues in the past, and has nowhere near the adoption of VSCode. But it&#8217;s worth a look.</p>



<h2>Design Mockups: <strong><a href="https://www.figma.com/" target="_blank" rel="noreferrer noopener">Figma</a></strong></h2>



<p><strong>Price: </strong>Free (with paid tiers)</p>



<p>This is assuming my audience is primary developers. For Designers, I might have a different recommendation. However, I love Figma because it feels like a design tool with developers in mind. Like VSCode, a wide plugin ecosystem doesn&#8217;t hurt. In fact, a number of plugins can help the export and initial development cycles. Such a time-saver.</p>



<p><strong>Chief Competitor: </strong><a href="https://www.adobe.com/products/xd.html" data-type="URL" data-id="https://www.adobe.com/products/xd.html" target="_blank" rel="noreferrer noopener">Adobe XD</a>. It&#8217;s recommend this to designers, as it&#8217;s a lovely tool. But it does more to scaffold web design for traditional designers than it does to scaffold web developer handover. However, it still does a good job of the latter the same way it does the former.</p>



<h2>Local Development: <strong><a href="https://localwp.com/" data-type="URL" data-id="https://localwp.com/" target="_blank" rel="noreferrer noopener">Local by Flywheel</a></strong></h2>



<p><strong>Price: </strong>Free (but hosting isn&#8217;t)</p>



<p>A big reason for this recommendation is that this is owned by Flywheel (good), which is itself owned by WPEngine (great). The ability to, in a single click, sync from Local to remote and back is key. It&#8217;s incredibly easy to spin up a local WordPress instance in minutes, and this makes working with a three-environment setup a no-brainer.</p>



<p>It is the simplest way to work with WordPress locally &#8212; full-stop.</p>



<p><strong>Chief Competitor: </strong><a rel="noreferrer noopener" href="https://www.oreilly.com/library/view/learning-php-mysql/9781449337452/ch02s01.html#:~:text=WAMP%2C%20MAMP%2C%20and%20LAMP%20are,developing%20dynamic%20Internet%20web%20pages." data-type="URL" data-id="https://www.oreilly.com/library/view/learning-php-mysql/9781449337452/ch02s01.html#:~:text=WAMP%2C%20MAMP%2C%20and%20LAMP%20are,developing%20dynamic%20Internet%20web%20pages." target="_blank">WAMP, MAMP, and LAMP</a> &#8212; but why go through the abstraction if it&#8217;s not key to your hosting circumstances? I really cannot recommend considering this alternative unless it fits your use-case &#8212; in which case you&#8217;re likely not a beginner or relatively new to development.</p>



<h2>Version Management: <strong><a href="https://github.com/" data-type="URL" target="_blank" rel="noreferrer noopener">GitHub</a></strong></h2>



<p><strong>Price: </strong>Free (with paid tiers)</p>



<p>There&#8217;s <a rel="noreferrer noopener" href="https://www.webdesignerdepot.com/2021/07/poll-the-ethical-dilemma-at-the-heart-of-githubs-copilot/" data-type="URL" data-id="https://www.webdesignerdepot.com/2021/07/poll-the-ethical-dilemma-at-the-heart-of-githubs-copilot/" target="_blank">ethical reasons</a> to reconsider GitHub. However, its wide adoption means it is a big step down to one of its competitors. Ultimately, all Git providers are the same. It&#8217;s underlying technology that neither GitHub nor its competitors solely control. It&#8217;s just a brand-name thing &#8212; but keep an eye out for a wider boycott I suppose, which can hurt its market leader status.</p>



<p><strong>Chief Competitors: </strong><a rel="noreferrer noopener" href="https://gitlab.com/" data-type="URL" data-id="https://gitlab.com/" target="_blank">GitLab</a>, <a rel="noreferrer noopener" href="https://bitbucket.org/product" data-type="URL" data-id="https://bitbucket.org/product" target="_blank">BitBucket</a> &#8212; truly, all Git providers are roughly the same.</p>



<h2>Content Management System: <strong><a href="https://wordpress.org/" data-type="URL" data-id="https://wordpress.org/" target="_blank" rel="noreferrer noopener">WordPress</a></strong></h2>



<p><strong>Price: </strong>Free (open-source)</p>



<p>WordPress, as I foreshadowed, is my pick due to market share (~1/3 of all websites run WordPress, and almost 2/3 of sites using a CMS are using WordPress) and plugin ecosystem. For every website use case, there&#8217;s a WordPress solutions. In so many cases, it&#8217;s better than the alternative of building something natively.</p>



<p>With the advent of Gutenberg and Full-Site Editing in 2022, the landscape for WordPress developers is going to change. Drastically. And quickly. While WordPress isn&#8217;t expected to remove PHP from it&#8217;s core code anytime soon, it&#8217;s neutered the need for any developers to touch it besides here-and-there in 2022. It&#8217;s possible to utilize all of WordPress without touching PHP. What a glorious sentence.</p>



<p><strong>Chief Competitors: </strong><a href="https://www.drupal.org/" data-type="URL" data-id="https://www.drupal.org/" target="_blank" rel="noreferrer noopener">Drupal</a>, <a href="https://ghost.org/" data-type="URL" data-id="https://ghost.org/" target="_blank" rel="noreferrer noopener">Ghost</a>, Static Site Generators. Of these &#8212;</p>



<ul><li>Drupal is antiquated. If WordPress is Target, Drupal is Sears. There&#8217;s no reason to pick it in 2022, and anyone who has a reason other than &#8220;cybersecurity&#8221; are lying. Anyone who says &#8220;cybersecurity&#8221; has old information.</li><li>Ghost is the closest experience I&#8217;ve seen to WordPress, but is a few feature releases behind it to be a real threat. It&#8217;s smooth, and definitely influenced by WordPress, and is written in Node.JS. However, it&#8217;s far less extendible than WordPress, and woefully under-featured to overcome that limitation with extension. Check back in five years.</li><li>Static Sites are the newest fad, but they provide legitimate security. There&#8217;s nothing to hack if your site is headless/decoupled from the data source, which could also still be a WordPress instance. These orchestrations are a little more work, but can help make your hosting cost as little as $0/month if you pick the right host.</li></ul>



<h2>Cloud Hosting: <strong><a href="http://netlify.com/" data-type="URL" data-id="http://netlify.com/" target="_blank" rel="noreferrer noopener">Netlify</a></strong></h2>



<p><strong>Price: </strong>Free, but paid if your usage grows high enough</p>



<p>My favorite place to host static projects is on Netlify. It can do so much more than what I ask of it, and usually does it for free. While it cannot host WordPress, it easily hosts static instances of WordPress when paired with a static site-gen plugin such as <a href="https://wordpress.org/plugins/simply-static/">Simply Static</a>.</p>



<p>Simplicity is the aim of Netlify, and it nails it. This will be the standard of hosting in five years, as it has its own CMS implementation (not a threat to WordPress, but remarkable). And you can&#8217;t beat free.</p>



<p><strong>Chief Competitors: </strong><a rel="noreferrer noopener" href="https://www.digitalocean.com/" data-type="URL" data-id="https://www.digitalocean.com/" target="_blank">Digital Ocean</a>, <a rel="noreferrer noopener" href="https://wpengine.com/" data-type="URL" data-id="https://wpengine.com/" target="_blank">WPEngine</a>, <a rel="noreferrer noopener" href="https://aws.amazon.com/" target="_blank">AWS</a> &#8212; none of these quite do what Netlify does. However, I can recommend each of these for slightly different use-cases.</p>



<h2>Development Browser: <strong><a rel="noreferrer noopener" href="http://netlify.com/" data-type="URL" data-id="http://netlify.com/" target="_blank">Chrome</a></strong></h2>



<p><strong>Price: </strong>Free</p>



<p>Much has been written about Firefox <a rel="noreferrer noopener" href="https://dev.to/krishnakakade/firefox-is-the-best-browser-for-web-developers-49i7" data-type="URL" data-id="https://dev.to/krishnakakade/firefox-is-the-best-browser-for-web-developers-49i7" target="_blank">having a superior Inspector experience</a>, which is accurate. However, Google powers Chrome, is the market leader, and provides tools to optimize for performance, which the biggest search engine prioritizes in page rank &#8212; which just so happens to also be Google. For that reason alone, Chrome Lighthouse trumps Firefox Inspector (and Chrome&#8217;s Inspector is no slouch).</p>



<p>In a perfect world, you&#8217;re development in each browser to gain the benefits of each. In a regular world, you&#8217;re definitely doing cross-browser review in each of them. But if you can only pick one, I say Chrome. It has a slightly larger extension ecosystem, and is in your SEO best interest.</p>



<p><strong>Chief Competitor: </strong><a rel="noreferrer noopener" href="https://www.mozilla.org/en-US/firefox/new/" data-type="URL" data-id="https://www.mozilla.org/en-US/firefox/new/" target="_blank">Firefox</a>, obviously.</p>
<p>The post <a rel="nofollow" href="/front-end-web-development-tools/">The Best Front-End Web Development Tools</a> appeared first on <a rel="nofollow" href="/">Rob, of the Web</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/front-end-web-development-tools/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
